package src

import (
	"fmt"
	"testbot/cmp"

	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api/v5"
)

var commands = tgbotapi.NewSetMyCommandsWithScope(
	tgbotapi.BotCommandScope{Type: "chat", ChatID: -1},
	tgbotapi.BotCommand{Command: "/register", Description: "–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –≤ –ë–∏–∑–Ω–µ—Å-–¢–∏–Ω–¥–µ—Ä–µ"},
)

func ExecCommand(b *cmp.Bot, ch *cmp.Chat, upd tgbotapi.Update) error {
	var msg tgbotapi.Message
	switch upd.Message.Command() {
	case "start":
		msg, _ = b.BotApi.Send(tgbotapi.NewMessage(ch.Id, "–í—ã —É–∂–µ –Ω–∞—á–∞–ª–∏ —á–∞—Ç"))
		b.LogMsg(msg)
	case "superuser":
		if b.CheckForRoot(upd) {
			msg, _ = b.BotApi.Send(tgbotapi.NewMessage(ch.Id, "–¢–µ–ø–µ—Ä—å —Ç—ã —Å—É–ø–µ—Ä-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"))
			b.LogMsg(msg)
			go Root(b, ch)
			return nil
		}
		return fmt.Errorf("Not a root")
	case "register":
		msg, _ = b.BotApi.Send(tgbotapi.NewMessage(ch.Id, "–ü—Ä–∏—à–ª–∏, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–≤–æ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞"))
		b.LogMsg(msg)
		upd = <-ch.Updates
		phone := upd.Message.Text
		txt := tgbotapi.NewMessage(ch.Id,
			`–†–∞—Å—Å–∫–∞–∂–∏ –æ —Å–µ–±–µ *(–≤ –æ–¥–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏)* ‚Äî –Ω–∞–º –Ω—É–∂–Ω–æ –∑–Ω–∞—Ç—å, –∫–∞–∫ –ø—Ä–µ–∑–µ–Ω—Ç–æ–≤–∞—Ç—å —Ç–µ–±—è —Ç–≤–æ–µ–º—É –ø–∞—Ä—Ç–Ω–µ—Ä—É –ø–æ –¥–∏–¥–∂–∏—Ç–∞–ª-–∑–Ω–∞–∫–æ–º—Å—Ç–≤–∞–º.`)
		//`–†–∞—Å—Å–∫–∞–∂–∏ –æ —Å–µ–±–µ *(–≤ –æ–¥–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏)* ‚Äî –Ω–∞–º –Ω—É–∂–Ω–æ –∑–Ω–∞—Ç—å, –∫–∞–∫ –ø—Ä–µ–∑–µ–Ω—Ç–æ–≤–∞—Ç—å —Ç–µ–±—è`)
		txt.ParseMode = "Markdown"
		msg, _ = b.BotApi.Send(txt)
		b.LogMsg(msg)
		txt = tgbotapi.NewMessage(ch.Id,
			`–ü–æ–¥—É–º–∞–π, —á—Ç–æ —Ç—ã —Å–∞–º —Ö–æ—Ç–µ–ª –±—ã —É–∑–Ω–∞—Ç—å –æ —Å–≤–æ—ë–º –Ω–æ–≤–æ–º –¥—Ä—É–≥–µ. –°—Ñ–µ—Ä–∞, –≤ –∫–æ—Ç–æ—Ä–æ–π –æ–Ω —Ö–æ—Ä–æ—à? –û–ø—ã—Ç —Ä–∞–±–æ—Ç—ã —Å —Ä–∞–∑–Ω—ã–º–∏ –Ω–∏—à–∞–º–∏? –ü—Ä–æ–µ–∫—Ç—ã, –∫–æ—Ç–æ—Ä—ã–º–∏ –æ–Ω –≥–æ—Ä–¥–∏—Ç—Å—è? –ú–æ–∂–µ—Ç, —Å–µ–ª–µ–±—Ä–∏—Ç–∏, —Å –∫–æ—Ç–æ—Ä—ã–º–∏ —Ä–∞–±–æ—Ç–∞–ª? –õ—é–±–∏–º—ã–π —Ü–≤–µ—Ç –∏–ª–∏ –∫–∞–Ω–∞–ª –≤ –¢–µ–ª–µ–≥—Ä–∞–º–µ?
			
			–í–æ—Ç –≤—Å–µ —ç—Ç–æ –∏ –Ω—É–∂–Ω–æ –Ω–∞–ø–∏—Å–∞—Ç—å –æ —Å–µ–±–µ. –ù–æ –ø–æ–º–Ω–∏: —ç—Ç–æ –Ω–µ —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–µ ‚Äî –≤—ã —É–∂–µ –≤ –Ω–∞—à–µ–º –∫–ª–∞–Ω–µ —Å–∞–º—ã—Ö –∫—Ä—É—Ç—ã—Ö —Ä–µ–±—è—Ç. –ü–∏—à–∏ –∂–∏–≤–æ –∏ –≤ —Å–≤–æ–±–æ–¥–Ω–æ–π —Ñ–æ—Ä–º–µ ‚Äî –ø–æ–º–Ω–∏, —á—Ç–æ —á–∏—Ç–∞—Ç—å —ç—Ç–æ –±—É–¥–µ—Ç –∫–∞–∫–æ–π-—Ç–æ –∫–ª–∞—Å—Å–Ω—ã–π —á–µ–ª–æ–≤–µ–∫, –∏ –µ–º—É –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ.
			`)
		//`–ü–æ–¥—É–º–∞–π, —á—Ç–æ —Ç—ã —Å–∞–º —Ö–æ—Ç–µ–ª –±—ã —É–∑–Ω–∞—Ç—å.
		//`)
		txt.ParseMode = "Markdown"
		msg, _ = b.BotApi.Send(txt)
		b.LogMsg(msg)
		upd = <-ch.Updates
		description := upd.Message.Text
		_, err := b.Db.Exec(`UPDATE public.chats
			SET phone=$1, description=$2, part=true
			WHERE id=$3`,
			phone,
			description,
			upd.Message.From.ID)
		if err == nil {
			msg, _ = b.BotApi.Send(tgbotapi.NewMessage(ch.Id, "–ê–∂ —Å–∞–º–∏–º –∑–∞—Ö–æ—Ç–µ–ª–æ—Å—å —Å —Ç–æ–±–æ–π –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è! –ù–∞—á–∏–Ω–∞–µ–º –∏—Å–∫–∞—Ç—å!"))
			b.LogMsg(msg)
			go Participant(b, ch)
			return nil
		}
	}
	return fmt.Errorf("no such command")
}
func SimpleUser(b *cmp.Bot, ch *cmp.Chat) {
	commands.Scope.ChatID = ch.Id
	b.BotApi.Request(commands)
	txt := tgbotapi.NewMessage(ch.Id, "*–ü—Ä–∏–≤–µ—Ç!* –ï—Å–ª–∏ —Ç—ã –∑–¥–µ—Å—å, –∑–Ω–∞—á–∏—Ç, –ø—Ä–∏–Ω—è–ª –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ —Å—Ç–∞–Ω–æ–≤–∏—Ç—å—Å—è —Å–∏–ª—å–Ω—ã–º, –ª–æ–≤–∫–∏–º –∏ —É–º–µ–ª—ã–º –≤–º–µ—Å—Ç–µ —Å Up&Boost ‚ù§Ô∏è‚Äçüî•")
	txt.ParseMode = "Markdown"
	msg, _ := b.BotApi.Send(txt)
	b.LogMsg(msg)
	txt = tgbotapi.NewMessage(ch.Id, "–ò –æ–¥–∏–Ω –∏–∑ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ —Ç–≤–æ–µ–π –ø—Ä–æ–∫–∞—á–∫–∏ –∫–∞–∫ –∫—Ä—É—Ç–æ–≥–æ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞ ‚Äî –¥–∏–¥–∂–∏—Ç–∞–ª-—Ç–∏–Ω–¥–µ—Ä, –≥–¥–µ —Ç—ã —Å–º–æ–∂–µ—à—å –∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è –∫–∞–∂–¥—É—é –Ω–µ–¥–µ–ª—é —Å –Ω–æ–≤—ã–º —á–µ–ª–æ–≤–µ–∫–æ–º –∏–∑ —Å–≤–æ–µ–π —Å—Ä–µ–¥—ã.")
	txt.ParseMode = "Markdown"
	msg, _ = b.BotApi.Send(txt)
	b.LogMsg(msg)
	txt = tgbotapi.NewMessage(ch.Id,
		`–í–æ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–æ–º–µ–Ω—Ç–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ —Ç–µ–±–µ –Ω—É–∂–Ω–æ –∑–Ω–∞—Ç—å:
	
	–í—Å—ë –∫–∞–∫ –≤ —Ç–∏–Ω–¥–µ—Ä–µ, ¬´–∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ¬ª ¬´–Ω–µ–∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ¬ª ‚Äî —Ç–≤–æ–∏ –≥–ª–∞–≤–Ω—ã–µ –∫–Ω–æ–ø–∫–∏
	–í—ã –∫–æ–Ω–Ω–µ–∫—Ç–∏—Ç–µ—Å—å –∏ —Å–∞–º–∏ —Ä–µ—à–∞–µ—Ç–µ, –∫–∞–∫ —á–∞—Å—Ç–æ –∏ –æ —á–µ–º –±—É–¥–µ—Ç–µ –±–æ–ª—Ç–∞—Ç—å. –ù–∞—à —Å–æ–≤–µ—Ç ‚Äî –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–∞–∂–¥–æ–µ –∑–Ω–∞–∫–æ–º—Å—Ç–≤–æ –Ω–∞ –º–∞–∫—Å–∏–º—É–º –∏ —Ä–∞—Å—à–∏—Ä—è–π—Ç–µ —Å–≤–æ–π –ø—É–ª –ø–æ–ª–µ–∑–Ω—ã—Ö —Å–≤—è–∑–µ–π.
	–ù–µ —Ç–æ–ª—å–∫–æ –ø–æ–ª—É—á–∞–π—Ç–µ, –Ω–æ –∏ –¥–∞–≤–∞–π—Ç–µ. –ë–æ–ª—å—à–µ —Ä–∞—Å—Å–∫–∞–∑—ã–≤–∞–π—Ç–µ –æ —Å–µ–±–µ –∏ –≥–æ–≤–æ—Ä–∏—Ç–µ –æ —Ç–æ–º, —á–µ–º –≤—ã –º–æ–∂–µ—Ç–µ –±—ã—Ç—å –ø–æ–ª–µ–∑–Ω—ã.
	–ë—É–¥—å—Ç–µ –≤–µ–∂–ª–∏–≤—ã, –ø—Ä–∏—è—Ç–Ω—ã –∏ –Ω–µ—Ç–æ–∫—Å–∏—á–Ω—ã ‚Äî –≤—Å–µ –∫–∞–∫ –≤ –∂–∏–∑–Ω–∏, —Ç–æ–ª—å–∫–æ —Ç–µ–ø–µ—Ä—å –µ—â—ë –∏ —Å –ø–æ–ª—å–∑–æ–π –¥–ª—è —Ä–∞–±–æ—Ç—ã. –í–∞—à–∞ —Ä–µ–ø—É—Ç–∞—Ü–∏—è —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç—Å—è –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å.
	–ú—ã –±—É–¥–µ–º –ø–æ–º–æ–≥–∞—Ç—å –≤–∞–º —Å–ª–æ–≤–∏—Ç—å —Ç–æ—Ç —Å–∞–º—ã–π –º—ç—Ç—á –∏ –¥–∑—ã–Ω—å. –ñ–¥–∏—Ç–µ –æ—Ç –Ω–∞—Å –ø–æ–¥—Å–∫–∞–∑–∫–∏, –∫–∞–∫ –ø–æ—Å—Ç—Ä–æ–∏—Ç—å –∫—Ä—É—Ç—É—é –∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏—é ‚Äî –º—ã —Ä—è–¥–æ–º.
	–ï—Å–ª–∏ –≤–¥—Ä—É–≥ —á—Ç–æ-—Ç–æ –∏–¥—ë—Ç –Ω–µ —Ç–∞–∫, –∏ –≤—ã —Ö–æ—Ç–µ–ª–∏ –±—ã –ø–æ–≥–æ–≤–æ—Ä–∏—Ç—å –æ–± —ç—Ç–æ–º, –ø–∏—à–∏—Ç–µ –Ω–∞–º –≤–æ—Ç —Å—é–¥–∞: @Avantiina_Team`)
	txt.ParseMode = ""
	msg, _ = b.BotApi.Send(txt)
	b.LogMsg(msg)
	b.Execute(cmp.WaitBlock{ChatId: ch.Id, Typing: true, Time: 10})
	txt = tgbotapi.NewMessage(ch.Id,
		`–ï—Å–ª–∏ –≤—Å—ë –ø–æ–Ω—è—Ç–Ω–æ –∂–º–∏ –∫–æ–º–∞–Ω–¥—É /register
		`)
	txt.ParseMode = "Markdown"
	msg, _ = b.BotApi.Send(txt)
	b.LogMsg(msg)
	for update := range ch.Updates {
		if update.Message != nil && update.Message.IsCommand() {
			if ExecCommand(b, ch, update) == nil {
				return
			}
		}
	}
}
